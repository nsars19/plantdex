generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id        Int         @id @default(autoincrement())
  name      String      @db.VarChar
  createdAt DateTime    @default(now()) @db.Timestamp(6)
  plantData plantData[]
}

model image {
  id             Int              @id @default(autoincrement())
  url            String           @db.VarChar
  plantDataImage plantDataImage[]
}

model plant {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now()) @db.Timestamp(6)
  plantData plantData[]
  plantName plantName[]
}

model plantData {
  id             Int              @id @default(autoincrement())
  plantId        Int
  description    String?          @db.VarChar
  createdAt      DateTime         @default(now()) @db.Timestamp(6)
  lastUpdatedAt  DateTime?        @db.Timestamp(6)
  categoryId     Int
  category       category         @relation(fields: [categoryId], references: [id], onDelete: NoAction)
  plant          plant            @relation(fields: [plantId], references: [id], onDelete: Cascade)
  plantDataImage plantDataImage[]
}

model plantDataImage {
  plantDataId       Int
  imageId           Int
  createdAt         DateTime  @default(now()) @db.Timestamp(6)
  isPlantPrimary    Boolean   @default(false)
  isCategoryPrimary Boolean   @default(false)
  id                Int       @id @default(autoincrement())
  image             image     @relation(fields: [imageId], references: [id], onDelete: Cascade)
  plantData         plantData @relation(fields: [plantDataId], references: [id], onDelete: Cascade)
}

model plantName {
  plantId      Int
  name         String  @db.VarChar
  isScientific Boolean
  id           Int     @id @default(autoincrement())
  plant        plant   @relation(fields: [plantId], references: [id], onDelete: NoAction)
}
